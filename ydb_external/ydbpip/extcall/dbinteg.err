ACCESS: 	Prevents Database Access			
	Block Size Equals Zero			
	Block Size is greater than 64K			
	Block Size not a multiple of 512 Bytes			
	Database for region rrr is already frozen, not INTEGing			
	File smaller than database header			
	Header indicates file creation did not complete			
	Header indicates file is corrupt			
	Header size not valid for database			
	Incorrect version of GT.M database			
	Region rrr file fff cannot be found			
	Start VBN smaller than possible			
	Total blocks equal zero			
	Unable to verify that this is a database file			
				
DANGEROUS:	Presents a high risk that continuing updates may cause significant additional damage			
	Bad key name			
	Bad pointer value in directory			
	Bit map block number as pointer			
	Block at incorrect level			
	Block Doubly allocated			
	Block incorrectly marked free			
	Block pointer larger than file maximum			
	Block pointer negative			
	Blocks per local map is less than 512			
	Blocks per local map is greater than 2K			
	Blocks per local map is not a multiple of 512			
	File size smaller than block count would indicate			
	Last record of block has nonzero compression count			
	Map block too small			
	Read error on bitmap			
	Root block number greater than last block number in file			
	Root block number is a local bit map number			
	Root block number negative			
	Root level higher than maximum			
	Root level less than one			
				
INDEX:	if the block is an index block, continuing updates will be quite dangerous: treat as a Dangerous; if the block is a data block, continuing updates can only cause limited additional damage			
	Bad numeric subscript			
	Block larger than file block size			
	Block too small			
	First record of block has nonzero compression count			
	Compression count not maximal			
	Key larger than database maximum			
	key greater than index key			
	Last record of block has invalid size			
	Key larger than maximum allowed length			
	Key too long			
	Key too short			
	Keys less than sibling's index key			
	Keys out of order			
	Record has too large compression count			
	Record too large			
	Record too small			
				
BENIGN:	Presents no risk of additional damage and has little or no effect on database performance			
	Block incorrectly marked busy			
	Can't INTEG region across network			
	Filename error			
	File size larger than block count would indicate			
	Free blocks counter in file header: nnn is incorrect, should be mmm			
	Local bit map incorrect			
	Local map block level incorrect			
	Map block too large			
	Master bit map incorrectly asserts this local map has free space			
	Master bit map incorrectly marks this local map full			
	Master bit map shows this map full, agreeing with disk local map			
	Master bit map shows this map full, agreeing with MUPIP INTEG			
	Master bit map shows this map full, in disagreement with both disk and MUPIP INTEG result			
	Master bit map shows this map has space, agreeing with disk local map			
	Master bit map show this map has space, agreeing with MUPIP INTEG			
				
TRANSIENT:	Automatically cleared by an update to the database			
	Block transaction number too large			
	Cannot determine access method, trying with BG			
	Current tn and early tn are not equal			
	Database was not properly rundown, write access required to perform rundown			
	Map block transaction number too large			
	Reference count is not zero
