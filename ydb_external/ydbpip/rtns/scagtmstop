:
gtm_dist=/SCA/gtm_dist
echo=/bin/echo
arch=ibm

if [ "`$gtm_dist/geteuid`" != "root" ] ; then
$echo "If you want to stop the daemon or perform a rundown on anyone"
$echo "else's MUMPS process, you must run this program as root."
$echo \\n
fi

$echo "Signalling all MUMPS processes to proceed with rundown."
$echo \\n

if [ $arch = "sun" ]; then
ps -ax | grep mumps | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
else
ps -ea | grep mumps | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
fi

$echo "Waiting for MUMPS processes to rundown."
$echo \\n

sleep 10

$echo "Resignalling processes."
$echo \\n

if [ $arch = "sun" ]; then
ps -ax | grep mumps | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
else
ps -ea | grep mumps | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
fi

ps -ea | fgrep mumps | fgrep -v grep > /usr/tmp/tmp$$
if [ $? -eq 0 ]
then
	$echo "The following mumps process(es) are still running:"
	cat /usr/tmp/tmp$$
fi
rm /usr/tmp/tmp$$

if [ "`$gtm_dist/geteuid`" != "root" ] ; then
	$echo "You are not root. Unable to terminate GT.M daemon."
else
	#$echo "Do you want to stop the GT.M daemon and server(s) if present? (y or n)\c"
	#read resp
	resp=y
	if [ "$resp" = "Y" -o "$resp" = "y" ] ; then
		$echo \\n

		if [ $arch = "sun" ]; then
		    if [ -f $gtm_dist/gtcm_server ]; then
		    	$echo "Stopping GT.CM server(s) ...."
		    	ps -ax | grep gtcm_run | awk '{ print "kill -15", $1 }' | sh > /dev/null 2>&1
		    	ps -ax | grep gtcm_s | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
		    	sleep 10
		    fi
		    $echo "Stopping GT.M daemon ...."
		    ps -ax | grep gtm_ | awk '{ print "kill -15", $1 }' | sh > /dev/null 2>&1
		else
		    if [ -f $gtm_dist/gtcm_server ]; then
		    	$echo "Stopping GT.CM server(s) ...."
		    	ps -ef | grep -v grep | grep gtcm_run | awk '{ print "kill -15", $2 }' | sh > /dev/null 2>&1
		    	ps -ea | grep gtcm_s | awk '{ print "kill -15", $1, " ; sleep 1" }' | sh > /dev/null 2>&1
		    	sleep 10
		    	ps -ea | grep gtcm_s > /usr/tmp/tmp$$
	
		    	if [ $? -eq 0 ]
		    	then
			    $echo "server(s) did not respond to kill -15."
			    $echo "sending TRAP signal to the gtcm_server(s)."
			    ps -ea | grep gtcm_s | awk '{ print "kill -5", $1, " ; sleep 2" }' | sh > /dev/null 2>&1
			    sleep 4
		        fi
	            fi
			
		    $echo "Stopping GT.M daemon ...."
		    ps -ea | grep gtm_ | awk '{ print "kill -15", $1 }' | sh > /dev/null 2>&1
		    sleep 2
		    ps -ea | grep gtm_ > /usr/tmp/tmp$$
		    if [ $? -eq 0 ]
		    then
			$echo "The daemon did not respond to kill -15."
			$echo "sending SIGBUS signal to gtm_dmna."
			ps -ea | grep gtm_ | awk '{ print "kill -10", $1 }' | sh > /dev/null 2>&1
			sleep 4
		    fi

		    if [ -f $gtm_dist/shmclean ]; then
		        $echo "Cleaning up shared memory segments and semaphores..."
#
# GTC suggests adding mupip rundown -region <name> for each region
# in your active databases.  This ensures flushing and deletion
# of the appropriate shared memory segments and semaphores.
#
# example:	        $gtm_dist/mupip rundown -region DEFAULT
#
		        $gtm_dist/shmclean -q -d
		        $gtm_dist/shmclean -q -s 

		    fi
	        fi
		$echo "Shutdown complete."
	fi
fi
