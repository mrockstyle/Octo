#!/bin/bash
#
# 	Usage: ddpserver directory_name time_interval
# 	       ddpserver directory_name stop
#
#	Examples: $SCA_RTNS/ddpserver ibsdev 30 minutes &
#		  $SCA_RTNS/ddpserver ibsdev 90 minutes &
#		  $SCA_RTNS/ddpserver ibsdev 1 hour &
#		  $SCA_RTNS/ddpserver ibsdev 1 hour >> /ibsdev/ddp/ddpserver.log&
#		  $SCA_RTNS/ddpserver ibsdev stop
#
# 	This script located in directory $SCA_RTNS goes into mumps to call
# 	the routine ^FEPTFILE, which will make transfers to the front-end
# 	processors which have been set up in the queue file.
#
# 	Harsha Lakshmikantha  03/12/98
#
#	----Revision History----------------------------------------------
#
#	02/08/02 - Bill Schill
#		   Modified $atjob checking for SunOS platform.
#
#       06/11/01 - Bill Schill
#		   Removed at -r if $ROLE != "PRIMARY"
#		   Modified $atid, $atjob checking for the various UNIX
#		   platforms.
#                  Changed head -1 to tail -1 when searching output of
#                  resubmit.log.  Warning messages are displayed for HP and
#                  LINUX in this file.
#
#	12/13/00 - Bill Schill
#		   Introduced error checking to "stop" command which will
#		   cause script to exit with error if either resubmit.log
#		   does not exist or variables atid or atjob is undefined
#		   (null).  Script will also exit with error if user does
#		   not own at job to be stopped.
#
#	12/12/00 - Bill Schill
#		   Changed !/bin/sh to !/bin/ksh.  This is necessary due
#		   to modifications to the gtmenv template, as new syntax in
#		   gtmenv could not be evaluated properly using /bin/sh on
#		   Tru64 machines.
#
#	11/17/00 - Bill Schill
#		   Modified test condition [ $id -eq $atid ] to 
#		   [ $id = $atid ] because these values are strings.
#		   Moved message "Exiting ddpserver - PROFILE/Anyware
#		   instance is $ROLE | `date`" when the instance is 
#		   sceondary above the test for the existence of
#		   resubmit.log.
#		   Added message to standard out when operator 
#		   can run "at -r $atjob" when passing the "stop"
#		   qualifier.
#
#	10/28/99 - Harsha Lakshmikantha
#		   Modified script to exit if the PROFILE instance is
#		   not PRIMARY. The cron job is also deleted.
#
#	------------------------------------------------------------------
#
#       Parameters
#
#       $1   	 -       PROFILE Directory name
#       $2 & $3  -       Time interval/stop
#
#
#	NOTE:
#
#	This script is resubmitted using the "at" command. 
#
#	The /var/adm/cron/at.allow and /var/adm/cron/at.deny files control
#	which users can use the at command. A person with root user authority
#	can create, edit, or delete these files. Entries in these files are
#	user login names with one name to a line. The following is an example
#	of an at.allow file:
#	
#	root
#	nick
#	dee
#	sarah
#	
#	If the at.allow file exists, only users whose login names appear in
#	it can use the at command.
#
#	atrm Job...       Removes Jobs previously scheduled by the at command,
#	where Job is the number assigned by the at or batch commands. atrm is 
#	not supported by HP and at -r has been substituted.
#
#	at -l	Lists the jobs scheduled by the at command.
#
#

NUMARGS=$#
ARG1=$1
ARG2=$2
ARG3=$3

os=`uname | tr '[a-z]' '[A-Z]'`

if [ ${ARG2:-""} = stop ]
then
	if [ ! -f /${ARG1}/ddp/resubmit.log ]
	then
		echo "No /${ARG1}/ddp/resubmit.log file exists\n"
		exit 1
	fi

	atjob=`tail -1 /${ARG1}/ddp/resubmit.log | awk '{print $2}'`
	id=`whoami`

	if [ ${os:-""} = "HP-UX" -o ${os:-""} = "SUNOS" ]
	then
		if [ ${atjob:-""} = "" ]
		then
		   echo "Cannot determine at job information- Please review"
		   echo "/${ARG1}/ddp/resubmit.log for abnormalities\n"
		   exit 1
		fi
		at -r $atjob 
		if [ $? -eq 0 ]
		then
		   echo "Scheduled job $atjob has been deleted\n"
		   exit 0
		else
		   echo "Could not remove job $atjob- Job may no longer exist"
		   echo "or job may not be owned by $id\n"
		   exit 1
		fi
	else
		if [ ${os:-""} = "LINUX" ]
		then
		   atid=`at -l | grep $atjob | awk '{print $5}'`
		else 
		   atid=`echo ${atjob:-""} | cut -d "." -f 1`
		fi	
		if [ ${atid:-""} = "" -o ${atjob:-""} = "" ]
		then 
		   echo "Cannot determine at job information- Please review"
		   echo "/${ARG1}/ddp/resubmit.log for abnormalities, or"
		   echo "run at -l as root to determine whether job $atjob exists.\n"
		   exit 1
		fi
		if [ $id = $atid ]
		then 
		   atrm $atjob
		   if [ $? -eq 0 ]
		   then
		      echo "Scheduled job $atjob has been deleted\n"
		      exit 0
		   else
		      echo "Scheduled job could not be deleted-\n$atjob may no longer exist\n"
		      exit 1
		   fi
		else
		   echo "Scheduled job $atjob could not be deleted- $id not owner\n"
		   exit 1
		fi 
	fi
fi

# Check for correct usage
 
if [ $NUMARGS -lt 3 ]
then
        echo $0: Usage: $0 PROFILE_directory_name time_interval
        echo $0: Example: $0 ibsdev 30 minutes
	echo ""
	echo "Enter IBS HOST directory name: \c"
	read dir
	echo ""
	echo "Enter resubmit time interval"
	echo "(Examples: 30 minutes, 90 minutes, or 1 hour): \c"
	read time1 time2
	echo ""
	$SCA_RTNS/ddpserver ${dir} ${time1} ${time2} >> /${dir}/ddp/ddpserver.log
	exit
	
fi


if [ ! -d /${ARG1} ]
then
	echo "ERROR: /${ARG1} not a valid PROFILE directory\n"
	exit
fi

if [ ! -f /${ARG1}/gtmenv ]
then
	echo "ERROR: File /${ARG1}/gtmenv not found\n"
	exit
fi

# Define environment variables for the PROFILE directory

. /${ARG1}/gtmenv

# Check and exit if the instance is not PRIMARY

ROLE_LOG=/${ARG1}/ddp/role.log

$gtm_dist/mumps -direct <<-FIN >/dev/null
	S ROLE=\$\$ROLE^PBSUTL
	S IO="$ROLE_LOG"	
	O IO
	U IO
	W ROLE
	C IO
	H
FIN
	
ROLE=`tail -1 $ROLE_LOG`
echo "$ROLE | `date`" >> /${ARG1}/ddp/ddpserver.log 
rm -f $ROLE_LOG

if [ ${ROLE:-""} != "PRIMARY" ]
then

	echo "Exiting ddpserver - PROFILE/Anyware instance is $ROLE | `date`" >> /${ARG1}/ddp/ddpserver.log 
	exit 1
fi
	
# Go into mumps and call routine FEPTFILE to transfer to FEP's

$gtm_dist/mumps -run FEPTFILE 2>> /${ARG1}/ddp/ddpserver.log &


if [ $? = 0 ]
then
	echo "DDP Network Server started (`date`)\n"
else
	echo "DDP Network Server not started\n"
	exit
fi

# Resubmit this job for the specified time interval

at now + ${ARG2} ${ARG3} <<! 2>/${ARG1}/ddp/resubmit.log
$SCA_RTNS/ddpserver ${ARG1} ${ARG2} ${ARG3} 1>> /${ARG1}/ddp/ddpserver.log
!

if [ $? = 0 ]
then
	echo "DDP Network Server resubmitted (`date`)\n\n"
else
	echo "DDP Network Server not resubmitted\n\n"
fi
